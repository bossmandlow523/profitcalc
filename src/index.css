@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 222 47% 4%;
    --foreground: 210 40% 98%;
    --card: 222 47% 7%;
    --card-foreground: 210 40% 98%;
    --popover: 222 47% 7%;
    --popover-foreground: 210 40% 98%;
    --primary: 243 75% 59%;
    --primary-foreground: 210 40% 98%;
    --secondary: 258 90% 66%;
    --secondary-foreground: 210 40% 98%;
    --muted: 223 47% 11%;
    --muted-foreground: 215.4 16.3% 56.9%;
    --accent: 243 75% 59%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 243 75% 59%;
    --radius: 0.75rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', system-ui, sans-serif;
  }
}

@layer components {
  .glass-card {
    background: rgba(26, 26, 36, 0.6);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(99, 102, 241, 0.2);
  }

  .glass-card-strong {
    background: rgba(26, 26, 36, 0.85);
    backdrop-filter: blur(24px);
    border: 1px solid rgba(99, 102, 241, 0.2);
  }

  .grid-bg {
    background-image: linear-gradient(to right, rgba(99, 102, 241, 0.04) 1px, transparent 1px),
                      linear-gradient(to bottom, rgba(99, 102, 241, 0.04) 1px, transparent 1px);
    background-size: 40px 40px;
  }

  .shimmer-effect {
    position: relative;
    overflow: hidden;
  }

  .shimmer-effect::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    animation: shimmer 3s infinite;
  }

  /* Circular progress spinner animation */
  @keyframes spin-around {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  :root {
    --animate-spin-around: spin-around 1s linear infinite;
  }

  .glow-text {
    text-shadow: 0 0 30px rgba(99, 102, 241, 0.4), 0 0 60px rgba(99, 102, 241, 0.2);
  }

  .strategy-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  .strategy-card::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 1rem;
    padding: 2px;
    background: linear-gradient(135deg, transparent, rgba(99, 102, 241, 0.3), transparent);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .strategy-card:hover::before {
    opacity: 1;
  }

  .strategy-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 16px 32px -8px rgba(99, 102, 241, 0.25);
  }

  /* Enhanced scrollbar styling for SaaS theme */
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--muted));
    border-radius: 5px;
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--primary) / 0.4);
    border-radius: 5px;
    transition: background 0.2s;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--primary) / 0.6);
  }

  /* Selection styling */
  ::selection {
    background: hsl(var(--primary) / 0.3);
    color: hsl(var(--foreground));
  }

  /* Focus visible for accessibility - but exclude inputs */
  *:focus-visible:not(input):not([data-slot]):not([role="spinbutton"]) {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
  }

  /* Remove ALL purple focus outlines from NumberInput and inputs - but NOT buttons */
  input:focus,
  input:focus-visible,
  input:focus-within,
  [data-slot="input-wrapper"]:focus-within,
  [data-slot="input-wrapper"]:focus,
  [data-slot="input-wrapper"]:focus-visible,
  [data-slot="input-wrapper"][data-focus="true"],
  [data-slot="input-wrapper"][data-focus-visible="true"],
  [data-slot="input-wrapper"][data-focused="true"],
  [data-slot="base"]:not(button),
  [data-slot="base"]:not(button):focus,
  [data-slot="base"]:not(button):focus-within,
  [data-slot="base"]:not(button):focus-visible,
  [data-slot="input"],
  [data-slot="input"]:focus,
  [data-slot="input"]:focus-visible,
  input[type="number"]:focus,
  input[type="number"]:focus-visible {
    outline: none !important;
    box-shadow: none !important;
    --tw-ring-shadow: none !important;
    --tw-ring-offset-shadow: none !important;
    --tw-ring-color: transparent !important;
  }

  /* Make NumberInput slimmer */
  [data-slot="input-wrapper"] {
    min-height: 2.5rem !important;
    height: auto !important;
    padding: 0 !important;
  }

  [data-slot="input"] {
    padding: 0.5rem !important;
    font-size: 0.875rem !important;
  }

  /* Ensure buttons remain clickable */
  button,
  [role="button"],
  [data-slot="button"],
  .heroui-button {
    pointer-events: auto !important;
    position: relative !important;
    z-index: 10 !important;
  }

  /* Tetris-style Dashboard Grid */
  .tetris-grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 16px;
    width: 100%;
  }

  /* Responsive grid columns */
  @media (max-width: 1400px) {
    .tetris-grid {
      grid-template-columns: repeat(8, 1fr);
    }
  }

  @media (max-width: 1024px) {
    .tetris-grid {
      grid-template-columns: repeat(8, 1fr);
    }
  }

  @media (max-width: 640px) {
    .tetris-grid {
      grid-template-columns: repeat(4, 1fr);
      gap: 0.75rem;
    }
  }

  /* Grid column span utilities (col-span-{n}) */
  .col-span-1 { grid-column: span 1; }
  .col-span-2 { grid-column: span 2; }
  .col-span-3 { grid-column: span 3; }
  .col-span-4 { grid-column: span 4; }
  .col-span-5 { grid-column: span 5; }
  .col-span-6 { grid-column: span 6; }
  .col-span-7 { grid-column: span 7; }
  .col-span-8 { grid-column: span 8; }
  .col-span-9 { grid-column: span 9; }
  .col-span-10 { grid-column: span 10; }
  .col-span-11 { grid-column: span 11; }
  .col-span-12 { grid-column: span 12; }

  /* Responsive column spans */
  @media (max-width: 1400px) {
    .col-span-12, .col-span-11, .col-span-10, .col-span-9 { grid-column: span 8; }
    .col-span-8, .col-span-7 { grid-column: span 8; }
    .col-span-6, .col-span-5 { grid-column: span 4; }
    .col-span-4, .col-span-3 { grid-column: span 4; }
  }

  @media (max-width: 1024px) {
    .col-span-12, .col-span-11, .col-span-10, .col-span-9, .col-span-8 { grid-column: span 8; }
    .col-span-7, .col-span-6 { grid-column: span 8; }
    .col-span-5, .col-span-4 { grid-column: span 4; }
    .col-span-3, .col-span-2 { grid-column: span 4; }
  }

  @media (max-width: 640px) {
    .col-span-12, .col-span-11, .col-span-10, .col-span-9,
    .col-span-8, .col-span-7, .col-span-6, .col-span-5, .col-span-4 {
      grid-column: span 4;
    }
    .col-span-3, .col-span-2 { grid-column: span 2; }
  }

  /* Simple Dashboard Card - mimics drawCard() function */
  .dashboard-card {
    background: #000000;
    border: 2px solid #333333;
    border-radius: 8px;
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .dashboard-card-large {
    min-height: 700px;
  }

  .dashboard-card-medium {
    min-height: 550px;
  }

  .dashboard-card-small {
    min-height: 450px;
  }

  /* Container Header */
  .dashboard-card-header {
    margin-bottom: 1rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid #333333;
  }

  .dashboard-card-title {
    font-size: 1.125rem;
    font-weight: 700;
    color: #ffffff;
    margin-bottom: 0.25rem;
  }

  .dashboard-card-subtitle {
    font-size: 0.75rem;
    color: #666666;
  }

  /* Fix z-index stacking */
  .tetris-grid > * {
    z-index: 1;
  }

  .floating-widget {
    z-index: 100;
  }
}
